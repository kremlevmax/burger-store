{"ast":null,"code":"import{useDispatch,useSelector}from\"react-redux\";import{cartActions}from\"../../store/CartStore/actions/cartActions\";import{cartDataSelector}from\"../../store/CartStore/selectors/cartDataSelector\";import styles from\"./IngredientModal.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var IngredientModal=function IngredientModal(props){var dispatch=useDispatch();var cartData=useSelector(cartDataSelector);var ingredientCount=cartData.items.find(function(item){return item.id===props.ingredient.id;})?cartData.items.find(function(item){return item.id===props.ingredient.id;}).count:0;var buttonPhrase=ingredientCount>0?\"You already have \".concat(ingredientCount,\" pieces of this item in your cart\"):\"Add to Cart\";var addIngredientToCart=function addIngredientToCart(item){dispatch(cartActions.addItemToCart(item));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.ingredientImageAndText,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.ingredientImage,style:{backgroundImage:\"url(\".concat(props.ingredient.image,\")\")}}),/*#__PURE__*/_jsxs(\"div\",{className:styles.ingredientTextDescription,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.ingredientName,children:props.ingredient.name}),/*#__PURE__*/_jsx(\"div\",{children:props.ingredient.description}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Calories: \",props.ingredient.calories]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Price: \",props.ingredient.price]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.addButtonArea,children:/*#__PURE__*/_jsx(\"button\",{className:styles.addButton,onClick:function onClick(){return addIngredientToCart(props.ingredient);},children:buttonPhrase})})]});};export default IngredientModal;","map":{"version":3,"sources":["/Users/service/test/burger-store/src/components/IngredientModal/IngredientModal.js"],"names":["useDispatch","useSelector","cartActions","cartDataSelector","styles","IngredientModal","props","dispatch","cartData","ingredientCount","items","find","item","id","ingredient","count","buttonPhrase","addIngredientToCart","addItemToCart","ingredientImageAndText","ingredientImage","backgroundImage","image","ingredientTextDescription","ingredientName","name","description","calories","price","addButtonArea","addButton"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,WAAT,KAA4B,2CAA5B,CACA,OAASC,gBAAT,KAAiC,kDAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,8BAAnB,C,wFAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,QAAQ,CAAGP,WAAW,CAACE,gBAAD,CAA5B,CAEA,GAAMM,CAAAA,eAAe,CAAGD,QAAQ,CAACE,KAAT,CAAeC,IAAf,CACtB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYP,KAAK,CAACQ,UAAN,CAAiBD,EAAvC,EADsB,EAGpBL,QAAQ,CAACE,KAAT,CAAeC,IAAf,CAAoB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYP,KAAK,CAACQ,UAAN,CAAiBD,EAAvC,EAApB,EAA+DE,KAH3C,CAIpB,CAJJ,CAMA,GAAIC,CAAAA,YAAY,CACdP,eAAe,CAAG,CAAlB,4BACwBA,eADxB,sCAEI,aAHN,CAKA,GAAMQ,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACL,IAAD,CAAU,CACpCL,QAAQ,CAACL,WAAW,CAACgB,aAAZ,CAA0BN,IAA1B,CAAD,CAAR,CACD,CAFD,CAIA,mBACE,oCACE,aAAK,SAAS,CAAER,MAAM,CAACe,sBAAvB,wBACE,YACE,SAAS,CAAEf,MAAM,CAACgB,eADpB,CAEE,KAAK,CAAE,CAAEC,eAAe,eAASf,KAAK,CAACQ,UAAN,CAAiBQ,KAA1B,KAAjB,CAFT,EADF,cAKE,aAAK,SAAS,CAAElB,MAAM,CAACmB,yBAAvB,wBACE,YAAK,SAAS,CAAEnB,MAAM,CAACoB,cAAvB,UAAwClB,KAAK,CAACQ,UAAN,CAAiBW,IAAzD,EADF,cAEE,qBAAMnB,KAAK,CAACQ,UAAN,CAAiBY,WAAvB,EAFF,cAGE,oCAAgBpB,KAAK,CAACQ,UAAN,CAAiBa,QAAjC,GAHF,cAIE,iCAAarB,KAAK,CAACQ,UAAN,CAAiBc,KAA9B,GAJF,GALF,GADF,cAaE,YAAK,SAAS,CAAExB,MAAM,CAACyB,aAAvB,uBACE,eACE,SAAS,CAAEzB,MAAM,CAAC0B,SADpB,CAEE,OAAO,CAAE,yBAAMb,CAAAA,mBAAmB,CAACX,KAAK,CAACQ,UAAP,CAAzB,EAFX,UAIGE,YAJH,EADF,EAbF,GADF,CAwBD,CA3CD,CA6CA,cAAeX,CAAAA,eAAf","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { cartActions } from \"../../store/CartStore/actions/cartActions\";\nimport { cartDataSelector } from \"../../store/CartStore/selectors/cartDataSelector\";\nimport styles from \"./IngredientModal.module.css\";\n\nconst IngredientModal = (props) => {\n  const dispatch = useDispatch();\n  const cartData = useSelector(cartDataSelector);\n\n  const ingredientCount = cartData.items.find(\n    (item) => item.id === props.ingredient.id\n  )\n    ? cartData.items.find((item) => item.id === props.ingredient.id).count\n    : 0;\n\n  let buttonPhrase =\n    ingredientCount > 0\n      ? `You already have ${ingredientCount} pieces of this item in your cart`\n      : \"Add to Cart\";\n\n  const addIngredientToCart = (item) => {\n    dispatch(cartActions.addItemToCart(item));\n  };\n\n  return (\n    <div>\n      <div className={styles.ingredientImageAndText}>\n        <div\n          className={styles.ingredientImage}\n          style={{ backgroundImage: `url(${props.ingredient.image})` }}\n        ></div>\n        <div className={styles.ingredientTextDescription}>\n          <div className={styles.ingredientName}>{props.ingredient.name}</div>\n          <div>{props.ingredient.description}</div>\n          <div>Calories: {props.ingredient.calories}</div>\n          <div>Price: {props.ingredient.price}</div>\n        </div>\n      </div>\n      <div className={styles.addButtonArea}>\n        <button\n          className={styles.addButton}\n          onClick={() => addIngredientToCart(props.ingredient)}\n        >\n          {buttonPhrase}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default IngredientModal;\n"]},"metadata":{},"sourceType":"module"}