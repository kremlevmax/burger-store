{"ast":null,"code":"import produce from\"immer\";export var deleteItemFromCart=function deleteItemFromCart(state,action){var itemToDeleteId=action.payload.id;var itemToDeleteIndex=state.items.indexOf(state.items.find(function(item){return item.id===itemToDeleteId;}));var cart=produce(state,function(draft){if(state.items.find(function(item){return item.id===itemToDeleteId;}).count===1){draft.items.splice(itemToDeleteIndex,1);}else{draft.items.find(function(item){return item.id===itemToDeleteId;}).count-=1;}});localStorage.setItem(\"cart\",JSON.stringify(cart));return cart;};","map":{"version":3,"sources":["/Users/service/test/burger-store/src/store/CartStore/reducers/deleteItemFromCart.js"],"names":["produce","deleteItemFromCart","state","action","itemToDeleteId","payload","id","itemToDeleteIndex","items","indexOf","find","item","cart","draft","count","splice","localStorage","setItem","JSON","stringify"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,OAApB,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACnD,GAAMC,CAAAA,cAAc,CAAGD,MAAM,CAACE,OAAP,CAAeC,EAAtC,CACA,GAAMC,CAAAA,iBAAiB,CAAGL,KAAK,CAACM,KAAN,CAAYC,OAAZ,CACxBP,KAAK,CAACM,KAAN,CAAYE,IAAZ,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACL,EAAL,GAAYF,cAAtB,EAAjB,CADwB,CAA1B,CAIA,GAAMQ,CAAAA,IAAI,CAAGZ,OAAO,CAACE,KAAD,CAAQ,SAACW,KAAD,CAAW,CACrC,GAAIX,KAAK,CAACM,KAAN,CAAYE,IAAZ,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACL,EAAL,GAAYF,cAAtB,EAAjB,EAAuDU,KAAvD,GAAiE,CAArE,CAAwE,CACtED,KAAK,CAACL,KAAN,CAAYO,MAAZ,CAAmBR,iBAAnB,CAAsC,CAAtC,EACD,CAFD,IAEO,CACLM,KAAK,CAACL,KAAN,CAAYE,IAAZ,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACL,EAAL,GAAYF,cAAtB,EAAjB,EAAuDU,KAAvD,EAAgE,CAAhE,CACD,CACF,CANmB,CAApB,CAQAE,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAA7B,EACA,MAAOA,CAAAA,IAAP,CACD,CAhBM","sourcesContent":["import produce from \"immer\";\n\nexport const deleteItemFromCart = (state, action) => {\n  const itemToDeleteId = action.payload.id;\n  const itemToDeleteIndex = state.items.indexOf(\n    state.items.find((item) => item.id === itemToDeleteId)\n  );\n\n  const cart = produce(state, (draft) => {\n    if (state.items.find((item) => item.id === itemToDeleteId).count === 1) {\n      draft.items.splice(itemToDeleteIndex, 1);\n    } else {\n      draft.items.find((item) => item.id === itemToDeleteId).count -= 1;\n    }\n  });\n\n  localStorage.setItem(\"cart\", JSON.stringify(cart));\n  return cart;\n};\n"]},"metadata":{},"sourceType":"module"}