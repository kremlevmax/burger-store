{"ast":null,"code":"var _jsxFileName = \"/Users/service/test/burger-store/src/components/IngredientModal/IngredientModal.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cartActions } from \"../../store/CartStore/actions/cartActions\";\nimport { cartDataSelector } from \"../../store/CartStore/selectors/cartDataSelector\";\nimport styles from \"./IngredientModal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IngredientModal = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const cartData = useSelector(cartDataSelector);\n  const ingredientCount = cartData.items.find(item => item.id === props.ingredient.id) ? cartData.items.find(item => item.id === props.ingredient.id).count : 0;\n  let buttonPhrase = ingredientCount > 0 ? `You already have ${ingredientCount} pieces of this item in your cart` : \"Add to Cart\";\n\n  const addIngredientToCart = item => {\n    dispatch(cartActions.addItemToCart(item));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.ingredientImageAndText,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.ingredientImage,\n        style: {\n          backgroundImage: `url(${props.ingredient.image})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.ingredientTextDescription,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.ingredientName,\n          children: props.ingredient.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.ingredient.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Calories: \", props.ingredient.calories]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Price: \", props.ingredient.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.addButtonArea,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.addButton,\n        onClick: () => addIngredientToCart(props.ingredient),\n        children: buttonPhrase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IngredientModal, \"agesUIgviBvQZaNEpQHaISDz1cU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = IngredientModal;\nexport default IngredientModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientModal\");","map":{"version":3,"sources":["/Users/service/test/burger-store/src/components/IngredientModal/IngredientModal.js"],"names":["useDispatch","useSelector","cartActions","cartDataSelector","styles","IngredientModal","props","dispatch","cartData","ingredientCount","items","find","item","id","ingredient","count","buttonPhrase","addIngredientToCart","addItemToCart","ingredientImageAndText","ingredientImage","backgroundImage","image","ingredientTextDescription","ingredientName","name","description","calories","price","addButtonArea","addButton"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,2CAA5B;AACA,SAASC,gBAAT,QAAiC,kDAAjC;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,QAAQ,GAAGP,WAAW,CAACE,gBAAD,CAA5B;AAEA,QAAMM,eAAe,GAAGD,QAAQ,CAACE,KAAT,CAAeC,IAAf,CACrBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,KAAK,CAACQ,UAAN,CAAiBD,EADjB,IAGpBL,QAAQ,CAACE,KAAT,CAAeC,IAAf,CAAqBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,KAAK,CAACQ,UAAN,CAAiBD,EAA3D,EAA+DE,KAH3C,GAIpB,CAJJ;AAMA,MAAIC,YAAY,GACdP,eAAe,GAAG,CAAlB,GACK,oBAAmBA,eAAgB,mCADxC,GAEI,aAHN;;AAKA,QAAMQ,mBAAmB,GAAIL,IAAD,IAAU;AACpCL,IAAAA,QAAQ,CAACL,WAAW,CAACgB,aAAZ,CAA0BN,IAA1B,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAER,MAAM,CAACe,sBAAvB;AAAA,8BACE;AACE,QAAA,SAAS,EAAEf,MAAM,CAACgB,eADpB;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAG,OAAMf,KAAK,CAACQ,UAAN,CAAiBQ,KAAM;AAAjD;AAFT;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAElB,MAAM,CAACmB,yBAAvB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEnB,MAAM,CAACoB,cAAvB;AAAA,oBAAwClB,KAAK,CAACQ,UAAN,CAAiBW;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMnB,KAAK,CAACQ,UAAN,CAAiBY;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,mCAAgBpB,KAAK,CAACQ,UAAN,CAAiBa,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,gCAAarB,KAAK,CAACQ,UAAN,CAAiBc,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAExB,MAAM,CAACyB,aAAvB;AAAA,6BACE;AACE,QAAA,SAAS,EAAEzB,MAAM,CAAC0B,SADpB;AAEE,QAAA,OAAO,EAAE,MAAMb,mBAAmB,CAACX,KAAK,CAACQ,UAAP,CAFpC;AAAA,kBAIGE;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA3CD;;GAAMX,e;UACaL,W,EACAC,W;;;KAFbI,e;AA6CN,eAAeA,eAAf","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { cartActions } from \"../../store/CartStore/actions/cartActions\";\nimport { cartDataSelector } from \"../../store/CartStore/selectors/cartDataSelector\";\nimport styles from \"./IngredientModal.module.css\";\n\nconst IngredientModal = (props) => {\n  const dispatch = useDispatch();\n  const cartData = useSelector(cartDataSelector);\n\n  const ingredientCount = cartData.items.find(\n    (item) => item.id === props.ingredient.id\n  )\n    ? cartData.items.find((item) => item.id === props.ingredient.id).count\n    : 0;\n\n  let buttonPhrase =\n    ingredientCount > 0\n      ? `You already have ${ingredientCount} pieces of this item in your cart`\n      : \"Add to Cart\";\n\n  const addIngredientToCart = (item) => {\n    dispatch(cartActions.addItemToCart(item));\n  };\n\n  return (\n    <div>\n      <div className={styles.ingredientImageAndText}>\n        <div\n          className={styles.ingredientImage}\n          style={{ backgroundImage: `url(${props.ingredient.image})` }}\n        ></div>\n        <div className={styles.ingredientTextDescription}>\n          <div className={styles.ingredientName}>{props.ingredient.name}</div>\n          <div>{props.ingredient.description}</div>\n          <div>Calories: {props.ingredient.calories}</div>\n          <div>Price: {props.ingredient.price}</div>\n        </div>\n      </div>\n      <div className={styles.addButtonArea}>\n        <button\n          className={styles.addButton}\n          onClick={() => addIngredientToCart(props.ingredient)}\n        >\n          {buttonPhrase}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default IngredientModal;\n"]},"metadata":{},"sourceType":"module"}