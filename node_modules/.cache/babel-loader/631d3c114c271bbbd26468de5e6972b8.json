{"ast":null,"code":"import produce from \"immer\";\nexport const deleteItemFromCart = (state, action) => {\n  const itemToDeleteId = action.payload.id;\n  const itemToDeleteIndex = state.items.indexOf(state.items.find(item => item.id === itemToDeleteId));\n  const cart = produce(state, draft => {\n    if (state.items.find(item => item.id === itemToDeleteId).count === 1) {\n      draft.items.splice(itemToDeleteIndex, 1);\n    } else {\n      draft.items.find(item => item.id === itemToDeleteId).count -= 1;\n    }\n  });\n  localStorage.setItem(\"cart\", JSON.stringify(cart));\n  return cart;\n};","map":{"version":3,"sources":["/Users/service/test/burger-store/src/store/CartStore/reducers/deleteItemFromCart.js"],"names":["produce","deleteItemFromCart","state","action","itemToDeleteId","payload","id","itemToDeleteIndex","items","indexOf","find","item","cart","draft","count","splice","localStorage","setItem","JSON","stringify"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnD,QAAMC,cAAc,GAAGD,MAAM,CAACE,OAAP,CAAeC,EAAtC;AACA,QAAMC,iBAAiB,GAAGL,KAAK,CAACM,KAAN,CAAYC,OAAZ,CACxBP,KAAK,CAACM,KAAN,CAAYE,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYF,cAAvC,CADwB,CAA1B;AAIA,QAAMQ,IAAI,GAAGZ,OAAO,CAACE,KAAD,EAASW,KAAD,IAAW;AACrC,QAAIX,KAAK,CAACM,KAAN,CAAYE,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYF,cAAvC,EAAuDU,KAAvD,KAAiE,CAArE,EAAwE;AACtED,MAAAA,KAAK,CAACL,KAAN,CAAYO,MAAZ,CAAmBR,iBAAnB,EAAsC,CAAtC;AACD,KAFD,MAEO;AACLM,MAAAA,KAAK,CAACL,KAAN,CAAYE,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYF,cAAvC,EAAuDU,KAAvD,IAAgE,CAAhE;AACD;AACF,GANmB,CAApB;AAQAE,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAA7B;AACA,SAAOA,IAAP;AACD,CAhBM","sourcesContent":["import produce from \"immer\";\n\nexport const deleteItemFromCart = (state, action) => {\n  const itemToDeleteId = action.payload.id;\n  const itemToDeleteIndex = state.items.indexOf(\n    state.items.find((item) => item.id === itemToDeleteId)\n  );\n\n  const cart = produce(state, (draft) => {\n    if (state.items.find((item) => item.id === itemToDeleteId).count === 1) {\n      draft.items.splice(itemToDeleteIndex, 1);\n    } else {\n      draft.items.find((item) => item.id === itemToDeleteId).count -= 1;\n    }\n  });\n\n  localStorage.setItem(\"cart\", JSON.stringify(cart));\n  return cart;\n};\n"]},"metadata":{},"sourceType":"module"}