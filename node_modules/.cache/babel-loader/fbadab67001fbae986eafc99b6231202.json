{"ast":null,"code":"var _jsxFileName = \"/Users/service/test/burger-store/src/components/Modal/Modal.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./Modal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = props => {\n  _s();\n\n  const closeOnEscapeButton = event => {\n    if ((event.charCode || event.keyCode) === 27) {\n      props.onClose();\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener(\"keydown\", closeOnEscapeButton);\n    return function cleanup() {\n      document.body.removeEventListener(\"keydown\", closeOnEscapeButton);\n    };\n  });\n  const isModalShownClass = props.show ? `${styles.modal} ${styles.show}` : `${styles.modal}`;\n\n  const modal = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isModalShownClass,\n    onClick: props.onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContent,\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: props.onClose,\n        className: styles.closeXButton,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/ReactDOM.createPortal(modal, document.body);\n};\n\n_s(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/service/test/burger-store/src/components/Modal/Modal.js"],"names":["useEffect","ReactDOM","styles","Modal","props","closeOnEscapeButton","event","charCode","keyCode","onClose","document","body","addEventListener","cleanup","removeEventListener","isModalShownClass","show","modal","modalContent","e","stopPropagation","closeXButton","children","createPortal"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAI,CAACA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACE,OAAzB,MAAsC,EAA1C,EAA8C;AAC5CJ,MAAAA,KAAK,CAACK,OAAN;AACD;AACF,GAJD;;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,SAA/B,EAA0CP,mBAA1C;AACA,WAAO,SAASQ,OAAT,GAAmB;AACxBH,MAAAA,QAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,SAAlC,EAA6CT,mBAA7C;AACD,KAFD;AAGD,GALQ,CAAT;AAOA,QAAMU,iBAAiB,GAAGX,KAAK,CAACY,IAAN,GACrB,GAAEd,MAAM,CAACe,KAAM,IAAGf,MAAM,CAACc,IAAK,EADT,GAErB,GAAEd,MAAM,CAACe,KAAM,EAFpB;;AAGA,QAAMA,KAAK,gBACT;AAAK,IAAA,SAAS,EAAEF,iBAAhB;AAAmC,IAAA,OAAO,EAAEX,KAAK,CAACK,OAAlD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACgB,YAAvB;AAAqC,MAAA,OAAO,EAAGC,CAAD,IAAOA,CAAC,CAACC,eAAF,EAArD;AAAA,8BACE;AAAK,QAAA,OAAO,EAAEhB,KAAK,CAACK,OAApB;AAA6B,QAAA,SAAS,EAAEP,MAAM,CAACmB,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGjB,KAAK,CAACkB,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,sBAAOrB,QAAQ,CAACsB,YAAT,CAAsBN,KAAtB,EAA6BP,QAAQ,CAACC,IAAtC,CAAP;AACD,CA5BD;;GAAMR,K;;KAAAA,K;AA8BN,eAAeA,KAAf","sourcesContent":["import { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./Modal.module.css\";\n\nconst Modal = (props) => {\n  const closeOnEscapeButton = (event) => {\n    if ((event.charCode || event.keyCode) === 27) {\n      props.onClose();\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener(\"keydown\", closeOnEscapeButton);\n    return function cleanup() {\n      document.body.removeEventListener(\"keydown\", closeOnEscapeButton);\n    };\n  });\n\n  const isModalShownClass = props.show\n    ? `${styles.modal} ${styles.show}`\n    : `${styles.modal}`;\n  const modal = (\n    <div className={isModalShownClass} onClick={props.onClose}>\n      <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>\n        <div onClick={props.onClose} className={styles.closeXButton}>\n          X\n        </div>\n        {props.children}\n      </div>\n    </div>\n  );\n  return ReactDOM.createPortal(modal, document.body);\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}